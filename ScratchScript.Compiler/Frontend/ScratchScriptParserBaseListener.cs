//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ../Resources/Grammar/ScratchScriptParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IScratchScriptParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ScratchScriptParserBaseListener : IScratchScriptParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] ScratchScriptParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] ScratchScriptParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.topLevelStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTopLevelStatement([NotNull] ScratchScriptParser.TopLevelStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.topLevelStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTopLevelStatement([NotNull] ScratchScriptParser.TopLevelStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] ScratchScriptParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] ScratchScriptParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] ScratchScriptParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] ScratchScriptParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.eventStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEventStatement([NotNull] ScratchScriptParser.EventStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.eventStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEventStatement([NotNull] ScratchScriptParser.EventStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentStatement([NotNull] ScratchScriptParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentStatement([NotNull] ScratchScriptParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.listAssignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListAssignmentStatement([NotNull] ScratchScriptParser.ListAssignmentStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.listAssignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListAssignmentStatement([NotNull] ScratchScriptParser.ListAssignmentStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.variableDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationStatement([NotNull] ScratchScriptParser.VariableDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.variableDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationStatement([NotNull] ScratchScriptParser.VariableDeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.memberFunctionCallStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberFunctionCallStatement([NotNull] ScratchScriptParser.MemberFunctionCallStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.memberFunctionCallStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberFunctionCallStatement([NotNull] ScratchScriptParser.MemberFunctionCallStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.functionCallStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallStatement([NotNull] ScratchScriptParser.FunctionCallStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.functionCallStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallStatement([NotNull] ScratchScriptParser.FunctionCallStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.functionDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclarationStatement([NotNull] ScratchScriptParser.FunctionDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.functionDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclarationStatement([NotNull] ScratchScriptParser.FunctionDeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.enumDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDeclarationStatement([NotNull] ScratchScriptParser.EnumDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.enumDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDeclarationStatement([NotNull] ScratchScriptParser.EnumDeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.enumEntry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumEntry([NotNull] ScratchScriptParser.EnumEntryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.enumEntry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumEntry([NotNull] ScratchScriptParser.EnumEntryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.irBlockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIrBlockStatement([NotNull] ScratchScriptParser.IrBlockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.irBlockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIrBlockStatement([NotNull] ScratchScriptParser.IrBlockStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.irStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIrStatement([NotNull] ScratchScriptParser.IrStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.irStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIrStatement([NotNull] ScratchScriptParser.IrStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] ScratchScriptParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] ScratchScriptParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] ScratchScriptParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] ScratchScriptParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] ScratchScriptParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] ScratchScriptParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.elseIfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfStatement([NotNull] ScratchScriptParser.ElseIfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.elseIfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfStatement([NotNull] ScratchScriptParser.ElseIfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.postIncrementStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostIncrementStatement([NotNull] ScratchScriptParser.PostIncrementStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.postIncrementStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostIncrementStatement([NotNull] ScratchScriptParser.PostIncrementStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportStatement([NotNull] ScratchScriptParser.ImportStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportStatement([NotNull] ScratchScriptParser.ImportStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.attributeStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeStatement([NotNull] ScratchScriptParser.AttributeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.attributeStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeStatement([NotNull] ScratchScriptParser.AttributeStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] ScratchScriptParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] ScratchScriptParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.repeatStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatStatement([NotNull] ScratchScriptParser.RepeatStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.repeatStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatStatement([NotNull] ScratchScriptParser.RepeatStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.throwStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThrowStatement([NotNull] ScratchScriptParser.ThrowStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.throwStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThrowStatement([NotNull] ScratchScriptParser.ThrowStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] ScratchScriptParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] ScratchScriptParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.namespaceStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceStatement([NotNull] ScratchScriptParser.NamespaceStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.namespaceStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceStatement([NotNull] ScratchScriptParser.NamespaceStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] ScratchScriptParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] ScratchScriptParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.typedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypedIdentifier([NotNull] ScratchScriptParser.TypedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.typedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypedIdentifier([NotNull] ScratchScriptParser.TypedIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.functionArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionArgument([NotNull] ScratchScriptParser.FunctionArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.functionArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionArgument([NotNull] ScratchScriptParser.FunctionArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.debuggerStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDebuggerStatement([NotNull] ScratchScriptParser.DebuggerStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.debuggerStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDebuggerStatement([NotNull] ScratchScriptParser.DebuggerStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>interpolatedStringExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolatedStringExpression([NotNull] ScratchScriptParser.InterpolatedStringExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>interpolatedStringExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolatedStringExpression([NotNull] ScratchScriptParser.InterpolatedStringExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpression([NotNull] ScratchScriptParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpression([NotNull] ScratchScriptParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryBitwiseExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryBitwiseExpression([NotNull] ScratchScriptParser.BinaryBitwiseExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryBitwiseExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryBitwiseExpression([NotNull] ScratchScriptParser.BinaryBitwiseExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExpression([NotNull] ScratchScriptParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExpression([NotNull] ScratchScriptParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpression([NotNull] ScratchScriptParser.NotExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpression([NotNull] ScratchScriptParser.NotExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryMultiplyExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryMultiplyExpression([NotNull] ScratchScriptParser.BinaryMultiplyExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryMultiplyExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryMultiplyExpression([NotNull] ScratchScriptParser.BinaryMultiplyExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryAddExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryAddExpression([NotNull] ScratchScriptParser.UnaryAddExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryAddExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryAddExpression([NotNull] ScratchScriptParser.UnaryAddExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayInitializeExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayInitializeExpression([NotNull] ScratchScriptParser.ArrayInitializeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayInitializeExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayInitializeExpression([NotNull] ScratchScriptParser.ArrayInitializeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayAccessExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayAccessExpression([NotNull] ScratchScriptParser.ArrayAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayAccessExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayAccessExpression([NotNull] ScratchScriptParser.ArrayAccessExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedExpression([NotNull] ScratchScriptParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedExpression([NotNull] ScratchScriptParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryBooleanExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryBooleanExpression([NotNull] ScratchScriptParser.BinaryBooleanExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryBooleanExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryBooleanExpression([NotNull] ScratchScriptParser.BinaryBooleanExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallExpression([NotNull] ScratchScriptParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallExpression([NotNull] ScratchScriptParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryCompareExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryCompareExpression([NotNull] ScratchScriptParser.BinaryCompareExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryCompareExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryCompareExpression([NotNull] ScratchScriptParser.BinaryCompareExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ternaryExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTernaryExpression([NotNull] ScratchScriptParser.TernaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ternaryExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTernaryExpression([NotNull] ScratchScriptParser.TernaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>memberFunctionCallExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberFunctionCallExpression([NotNull] ScratchScriptParser.MemberFunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>memberFunctionCallExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberFunctionCallExpression([NotNull] ScratchScriptParser.MemberFunctionCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryAddExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryAddExpression([NotNull] ScratchScriptParser.BinaryAddExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryAddExpression</c>
	/// labeled alternative in <see cref="ScratchScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryAddExpression([NotNull] ScratchScriptParser.BinaryAddExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.multiplyOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplyOperators([NotNull] ScratchScriptParser.MultiplyOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.multiplyOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplyOperators([NotNull] ScratchScriptParser.MultiplyOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.leftShift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftShift([NotNull] ScratchScriptParser.LeftShiftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.leftShift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftShift([NotNull] ScratchScriptParser.LeftShiftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.rightShift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightShift([NotNull] ScratchScriptParser.RightShiftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.rightShift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightShift([NotNull] ScratchScriptParser.RightShiftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.addOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddOperators([NotNull] ScratchScriptParser.AddOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.addOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddOperators([NotNull] ScratchScriptParser.AddOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.compareOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareOperators([NotNull] ScratchScriptParser.CompareOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.compareOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareOperators([NotNull] ScratchScriptParser.CompareOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.booleanOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanOperators([NotNull] ScratchScriptParser.BooleanOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.booleanOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanOperators([NotNull] ScratchScriptParser.BooleanOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.bitwiseOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseOperators([NotNull] ScratchScriptParser.BitwiseOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.bitwiseOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseOperators([NotNull] ScratchScriptParser.BitwiseOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.assignmentOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOperators([NotNull] ScratchScriptParser.AssignmentOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.assignmentOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOperators([NotNull] ScratchScriptParser.AssignmentOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.postIncrementOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostIncrementOperators([NotNull] ScratchScriptParser.PostIncrementOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.postIncrementOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostIncrementOperators([NotNull] ScratchScriptParser.PostIncrementOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase([NotNull] ScratchScriptParser.CaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase([NotNull] ScratchScriptParser.CaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] ScratchScriptParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] ScratchScriptParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.switchBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchBlock([NotNull] ScratchScriptParser.SwitchBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.switchBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchBlock([NotNull] ScratchScriptParser.SwitchBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.defaultCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultCase([NotNull] ScratchScriptParser.DefaultCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.defaultCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultCase([NotNull] ScratchScriptParser.DefaultCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.importAll"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportAll([NotNull] ScratchScriptParser.ImportAllContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.importAll"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportAll([NotNull] ScratchScriptParser.ImportAllContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] ScratchScriptParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] ScratchScriptParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] ScratchScriptParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] ScratchScriptParser.CommentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean([NotNull] ScratchScriptParser.BooleanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean([NotNull] ScratchScriptParser.BooleanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>regularType</c>
	/// labeled alternative in <see cref="ScratchScriptParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegularType([NotNull] ScratchScriptParser.RegularTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>regularType</c>
	/// labeled alternative in <see cref="ScratchScriptParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegularType([NotNull] ScratchScriptParser.RegularTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="ScratchScriptParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListType([NotNull] ScratchScriptParser.ListTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="ScratchScriptParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListType([NotNull] ScratchScriptParser.ListTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.interpolatedString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolatedString([NotNull] ScratchScriptParser.InterpolatedStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.interpolatedString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolatedString([NotNull] ScratchScriptParser.InterpolatedStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ScratchScriptParser.interpolatedStringPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolatedStringPart([NotNull] ScratchScriptParser.InterpolatedStringPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ScratchScriptParser.interpolatedStringPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolatedStringPart([NotNull] ScratchScriptParser.InterpolatedStringPartContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
